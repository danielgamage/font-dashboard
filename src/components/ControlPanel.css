.ControlPanel {
  background: var(--color-gray-darkest);
  color: var(--color-white-main);
  width: 24rem;
  font-size: 14px;
  text-align: left;
  overflow-x: hidden;
  display: flex;
  flex: 1 0 auto;
  flex-flow: column;
  justify-content: flex-start;
  line-height: 1.4;
}
.ControlPanelTab{
  position: relative;
  padding: 0 1rem 1rem;
  overflow-x: hidden;
  overflow-y: scroll;
  display: flex;
  flex-flow: row wrap;
  align-content: flex-start;
  justify-content: space-between;
}
.ControlPanelTab.inactive {
  opacity: 0.2;
}
.ControlPanelTab.inactive * {
  pointer-events: none;
}
.TabBar {
  display: flex;
  box-shadow: 0 0.5rem 0.5rem rgba(0,0,0,0.2);
  position: relative;
  z-index: 1;
  flex: 0 0 auto;
}
.TabBar button {
  appearance: none;
  background: none;
  border: 0;
  color: inherit;
  display: block;
  flex: 1 1 auto;
  padding: 1rem;
  line-height: 1;
}
.TabBar button:hover,
.TabBar button:focus {
  background: var(--color-gray-darker);
  cursor: pointer;
}
.TabBar button.active {
  box-shadow: 0 -0.2rem 0 var(--color-accent) inset;
}
.Control {
  display: block;
  padding: 1rem 0;
}
.Control::before {
  content: '';
  position: absolute;
  width: 100%;
  left: 0;
  transform: translate(0, -1rem);
  border-bottom: 1px solid var(--color-gray-darker);
}

.Control.flex {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
}

.full {
  width: 100%;
}
.half {
  width: calc((100% - (1rem / 2)) / 2);
}
.third {
  width: calc((100% - 2rem) / 3);
}
.quarter {
  width: calc((100% - 3rem) / 4);
}

.trbl + .trbl {
  margin-top: 0.5rem;
}
.Top {
  width: 100%;
  text-align: center;
}
.Left {
  width: 50%;
  text-align: center;
}
.Right {
  width: 50%;
  text-align: center;
}
.Bottom {
  width: 100%;
  text-align: center;
}

.sample {
  height: 1rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.ControlTitle {
  display: block;
  text-transform: uppercase;
  font-size: 0.65rem;
  line-height: 1;
  letter-spacing: 0.15em;
  color: var(--color-white-main);
  font-weight: bold;
  margin-bottom: 0.5rem;
  user-select: none;
}

.draggable {
  cursor: ew-resize !important;
}

.Control input[type=radio][name=alignment] {
  appearance: none;
  width: 0;
  height: 0;
  background: none;
  margin: 0;
}

input + .hide-checkbox__replacement-input {
  color: var(--color-gray-inactive);
}

input:checked + .hide-checkbox__replacement-input {
  color: var(--color-white-main);
}

.list input:checked + .hide-checkbox__replacement-input {
  border-color: var(--color-white-main);
}

.lock.hide-checkbox {
  margin-left: 0.5rem;
}

.text-transform__label {
  font-weight: bold;
  padding: 0.5rem 0.2rem;
  width: 2rem;
  font-size: 1.3rem;
  line-height: 2rem;
}

.hide-checkbox {
  display: inline-block;
}
.hide-checkbox.list {
  margin-right: 0.5rem;
  margin-bottom: 0.5rem;
  line-height: 1;
}
.hide-checkbox.list .hide-checkbox__replacement-input {
  padding: 0.3rem 0.4rem;
  border: 1px solid var(--color-gray-dark);
}
.hide-checkbox__input {
  width: 0;
  height: 0;
  padding: 0;
  margin: 0;
  position: absolute;
  opacity: 0;
}

.hide-checkbox__input:hover + .hide-checkbox__replacement-input,
.hide-checkbox__input:focus + .hide-checkbox__replacement-input {
  background: var(--color-gray-darker);
}

.font-family {
  display: flex;
  align-items: center;
}
.font-family input[type=text] {
  flex: 1 1 auto;
  display: block;
  margin: 1rem 0 1rem 1rem;
  max-width: none;
}

input[type=text],
input[type=number] {
  display: inline-block;
  max-width: 3rem;
  height: 2rem;
  background-color: var(--color-gray-darker);
  color: var(--color-white-main);
  border: 1px solid var(--color-gray-dark);
  padding: 0.3rem 0 0.4rem 0.5rem;
}

input.search {
  display: block;
  max-width: none;
  width: 100%;
  margin: 0.5rem 0;
}

.info-label {
  color: var(--color-gray-inactive);
  float: right;
}

input[type=color] {
  appearance: none;
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  opacity: 0;
}

input[type=color]:focus {
  outline: none;
}

.input--color {
  position: relative;
  background-image: url('../icons/transparency.svg');
  background-size: 1rem;
  width: 2rem;
  height: 2rem;
  border-radius: 1rem;

  display: inline-block;
  vertical-align: middle;
  margin-right: 0.5rem;
  overflow: hidden;
}
.input--color::before,
.input--color::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
}
.input--color::before {
  background-color: currentColor;
}
.input--color::after {
  border-radius: 1rem;
  box-shadow: 0 0 0 0.05rem var(--color-gray-inactive) inset,
              0 0 0 0.05rem var(--color-gray-inactive);
}
input[type=color]:focus + .input--color::after {
  box-shadow: 0 0 0 0.20rem var(--color-accent-bright) inset,
              0 0 0 0.05rem var(--color-accent-bright);
}

.Control svg {
  width: 2rem;
  height: 2rem;
  vertical-align: middle;
}

.Control svg.small {
  width: 1rem;
  height: 1rem;
}

.Control output {
  text-align: right;
}

.Control p {
  color: var(--color-gray-inactive);
  font-size: 12px;
}

dt {
  float: left;
  padding-right: 4rem;
  color: var(--color-white-main);
}
dd {
  text-align: right;
}

.metrics {
  margin: 3rem 0 2rem;
  position: relative;
}

.metrics__sample-text {
  font-size: 10em;
  white-space: nowrap;
  color: var(--color-gray-dark);
}

.metrics__dt,
.metrics__dd {
  position: relative;
  z-index: 2;
}

.metric {
  position: absolute;
  width: 100%;
  line-height: 1;
  margin: 0;
  margin-top: -1em;
}
.metric::after {
  content: '';
  position: absolute;
  width: 100%;
  bottom: 0;
  border-top: 1px solid var(--color-accent);
}

/*
 * Select
 */

.select {
  position: relative;
  display: inline-block;
  width: 100%;
}
.select select {
  display: inline-block;
  width: 100%;
  margin: 0;
  padding: 0.4rem 0.3rem;
  line-height: 1.5;
  color: inherit;
  background-color: transparent;
  cursor: pointer;
  outline: 0;
  appearance: none;
  border: 0.1rem solid var(--color-gray-darker);
  border-radius: 0;
  background: var(--color-gray-darker);
  color: var(--color-white-main);
}
.select select:hover {
  background: var(--color-gray-dark);
}

.select.no-border {
  width: auto;
}
.select.no-border select {
  background: transparent;
  border: 0;
  color: var(--color-white-main);
}
.select.no-border select:hover {
  background: var(--color-gray-darker);
}
/* Undo the Firefox inner focus ring */
.select select:focus:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 #000;
}

/* Focus */
.select select:focus {
  box-shadow: 0 0 0 .2rem var(--color-accent-dull);
}

/* Active/open */
.select select:active {
  color: var(--color-white-main);
  background-color: var(--color-accent-dull);
}

/* Hide the arrow in IE10 and up */
.select select::-ms-expand {
  display: none;
}

/* Media query to target Firefox only */
@-moz-document url-prefix() {
  /* Firefox hack to hide the arrow */
  .select select {
    text-indent: 0.01px;
    text-overflow: '';
    padding-right: 1rem;
  }

  /* <option> elements inherit styles from <select>, so reset them. */
  .select option {
    background-color: var(--color-white-main);
  }
}

/* IE9 hack to hide the arrow */
@media screen and (min-width:0\0) {
  .select select {
    z-index: 1;
    padding: .5rem 1.5rem .5rem 1rem;
  }
  .select:after {
    z-index: 5;
  }
  .select:before {
    position: absolute;
    top: 0;
    right: 1rem;
    bottom: 0;
    z-index: 2;
    content: "";
    display: block;
    width: 1.5rem;
    background-color: var(--color-white-main);
  }
  .select select:hover,
  .select select:focus,
  .select select:active {
    color: var(--color-gray-darkest);
    background-color: var(--color-white-main);
  }
}
